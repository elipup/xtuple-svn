/*
 * Common Public Attribution License Version 1.0. 
 * 
 * The contents of this file are subject to the Common Public Attribution 
 * License Version 1.0 (the "License"); you may not use this file except 
 * in compliance with the License. You may obtain a copy of the License 
 * at http://www.xTuple.com/CPAL.  The License is based on the Mozilla 
 * Public License Version 1.1 but Sections 14 and 15 have been added to 
 * cover use of software over a computer network and provide for limited 
 * attribution for the Original Developer. In addition, Exhibit A has 
 * been modified to be consistent with Exhibit B.
 * 
 * Software distributed under the License is distributed on an "AS IS" 
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See 
 * the License for the specific language governing rights and limitations 
 * under the License. 
 * 
 * The Original Code is PostBooks Accounting, ERP, and CRM Suite. 
 * 
 * The Original Developer is not the Initial Developer and is __________. 
 * If left blank, the Original Developer is the Initial Developer. 
 * The Initial Developer of the Original Code is OpenMFG, LLC, 
 * d/b/a xTuple. All portions of the code written by xTuple are Copyright 
 * (c) 1999-2008 OpenMFG, LLC, d/b/a xTuple. All Rights Reserved. 
 * 
 * Contributor(s): ______________________.
 * 
 * Alternatively, the contents of this file may be used under the terms 
 * of the xTuple End-User License Agreeement (the xTuple License), in which 
 * case the provisions of the xTuple License are applicable instead of 
 * those above.  If you wish to allow use of your version of this file only 
 * under the terms of the xTuple License and not to allow others to use 
 * your version of this file under the CPAL, indicate your decision by 
 * deleting the provisions above and replace them with the notice and other 
 * provisions required by the xTuple License. If you do not delete the 
 * provisions above, a recipient may use your version of this file under 
 * either the CPAL or the xTuple License.
 * 
 * EXHIBIT B.  Attribution Information
 * 
 * Attribution Copyright Notice: 
 * Copyright (c) 1999-2008 by OpenMFG, LLC, d/b/a xTuple
 * 
 * Attribution Phrase: 
 * Powered by PostBooks, an open source solution from xTuple
 * 
 * Attribution URL: www.xtuple.org 
 * (to be included in the "Community" menu of the application if possible)
 * 
 * Graphic Image as provided in the Covered Code, if any. 
 * (online at www.xtuple.com/poweredby)
 * 
 * Display of Attribution Information is required in Larger Works which 
 * are defined in the CPAL as a work which combines Covered Code or 
 * portions thereof with code not governed by the terms of the CPAL.
 */

#ifndef _QEMBED_1804289383
#define _QEMBED_1804289383
#include <qimage.h>
#include <qdict.h>
static const unsigned char dspWoScheduleByItem_data[] = {
    0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
    0x00,0x00,0x02,0x07,0x00,0x00,0x00,0x01,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,
    0x0f,0x0f,0x0f,0x0f,0x01,0x01,0x07,0x07,0x07,0x0b,0x07,0x02,0x00,0x01,
    0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x01,0x0f,0x0b,0x0b,
    0x07,0x07,0x07,0x05,0x00,0x01,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,
    0x0f,0x0f,0x01,0x0f,0x0b,0x0b,0x0b,0x05,0x05,0x05,0x00,0x01,0x0f,0x0c,
    0x03,0x0c,0x03,0x0c,0x03,0x0c,0x03,0x0c,0x01,0x0f,0x0b,0x0b,0x0b,0x05,
    0x05,0x05,0x00,0x01,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x09,0x0f,0x0f,
    0x01,0x01,0x07,0x0b,0x0b,0x05,0x05,0x04,0x00,0x01,0x0f,0x0f,0x0d,0x0a,
    0x0a,0x0f,0x0f,0x04,0x03,0x0d,0x0d,0x09,0x0d,0x08,0x07,0x05,0x00,0x00,
    0x00,0x01,0x0f,0x0c,0x0a,0x03,0x04,0x0e,0x09,0x04,0x06,0x08,0x04,0x0e,
    0x09,0x03,0x0a,0x01,0x00,0x00,0x00,0x01,0x0f,0x0d,0x0f,0x0f,0x02,0x04,
    0x04,0x0e,0x04,0x04,0x02,0x0a,0x0a,0x0a,0x0a,0x01,0x00,0x00,0x00,0x01,
    0x0f,0x03,0x08,0x09,0x08,0x08,0x08,0x06,0x06,0x08,0x0d,0x0a,0x09,0x0e,
    0x03,0x01,0x00,0x00,0x00,0x01,0x0f,0x0c,0x02,0x06,0x0e,0x0e,0x08,0x08,
    0x0e,0x03,0x0a,0x0d,0x0a,0x09,0x0a,0x01,0x00,0x00,0x00,0x01,0x0f,0x0f,
    0x0f,0x08,0x06,0x02,0x02,0x0a,0x03,0x08,0x0a,0x0a,0x0a,0x0a,0x03,0x01,
    0x00,0x00,0x00,0x01,0x0f,0x0f,0x0a,0x06,0x0c,0x04,0x06,0x0a,0x09,0x02,
    0x0a,0x03,0x0a,0x03,0x0c,0x01,0x00,0x00,0x00,0x01,0x0f,0x08,0x04,0x02,
    0x06,0x06,0x08,0x0e,0x06,0x02,0x09,0x0a,0x0a,0x0a,0x03,0x01,0x00,0x00,
    0x00,0x01,0x0f,0x0f,0x0d,0x0a,0x09,0x08,0x0e,0x0e,0x02,0x02,0x02,0x03,
    0x03,0x0a,0x09,0x01,0x00,0x00,0x00,0x01,0x0d,0x0d,0x0a,0x0a,0x04,0x04,
    0x06,0x06,0x02,0x04,0x04,0x06,0x08,0x02,0x0b,0x01,0x00,0x00,0x00,0x01,
    0x0d,0x0d,0x0d,0x0c,0x04,0x0c,0x0a,0x01,0x0e,0x0c,0x02,0x02,0x0c,0x03,
    0x04,0x07,0x00,0x00,0x00,0x01,0x0d,0x0a,0x0a,0x03,0x0a,0x0a,0x03,0x04,
    0x0c,0x03,0x0c,0x09,0x0c,0x09,0x08,0x07,0x00,0x00,0x00,0x01,0x0d,0x0d,
    0x0d,0x0a,0x0a,0x0a,0x0a,0x09,0x0c,0x03,0x0c,0x0c,0x03,0x0c,0x0c,0x01,
    0x09,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
    0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00
};

static const QRgb dspWoScheduleByItem_ctable[] = {
    0xc6c6c6,0xff000000,0xff808080,0xffc0dcc0,0xff555f55,0xff7f3f00,0xff7f7faa,0xffaa3f00,0xffaa9faa,0xffaabfaa,0xffd4dfff,0xffff5f00,0xffccccff,0xfffffbf0,
    0xffa0a0a4,0xffffffff,0xffffffff
};

/* Generated by qembed */
static const unsigned char dspWoScheduleByWarehouse_data[] = {
    0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
    0x00,0x02,0x03,0x04,0x00,0x00,0x00,0x01,0x05,0x05,0x05,0x05,0x05,0x05,
    0x05,0x05,0x05,0x05,0x06,0x07,0x08,0x02,0x08,0x08,0x09,0x00,0x00,0x01,
    0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x02,0x0a,0x0a,0x0b,
    0x08,0x08,0x02,0x06,0x00,0x01,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x05,
    0x05,0x05,0x02,0x0c,0x0a,0x0a,0x02,0x07,0x03,0x0d,0x00,0x01,0x05,0x0e,
    0x0f,0x0e,0x0f,0x0e,0x0f,0x0e,0x0f,0x0e,0x02,0x10,0x11,0x10,0x03,0x12,
    0x07,0x07,0x00,0x01,0x05,0x05,0x05,0x05,0x05,0x05,0x05,0x13,0x05,0x05,
    0x07,0x0c,0x14,0x11,0x03,0x12,0x07,0x06,0x00,0x01,0x05,0x05,0x15,0x16,
    0x16,0x05,0x05,0x17,0x0f,0x15,0x13,0x04,0x09,0x0a,0x02,0x12,0x18,0x00,
    0x00,0x01,0x05,0x0e,0x16,0x0f,0x17,0x19,0x13,0x1a,0x1b,0x13,0x17,0x19,
    0x13,0x09,0x09,0x01,0x00,0x00,0x00,0x01,0x05,0x15,0x05,0x05,0x1c,0x18,
    0x18,0x19,0x18,0x18,0x1c,0x16,0x16,0x16,0x16,0x01,0x00,0x00,0x00,0x01,
    0x05,0x1d,0x13,0x13,0x1e,0x1e,0x1e,0x1f,0x1b,0x1e,0x15,0x16,0x1d,0x19,
    0x0f,0x01,0x00,0x00,0x00,0x01,0x05,0x0e,0x1c,0x20,0x1e,0x1f,0x1e,0x1e,
    0x19,0x0f,0x16,0x15,0x16,0x13,0x16,0x01,0x00,0x00,0x00,0x01,0x05,0x05,
    0x05,0x13,0x19,0x20,0x1c,0x16,0x0e,0x1e,0x16,0x0f,0x16,0x16,0x1d,0x01,
    0x00,0x00,0x00,0x01,0x05,0x05,0x21,0x1b,0x1e,0x1c,0x1c,0x16,0x13,0x1c,
    0x16,0x16,0x0f,0x16,0x22,0x01,0x00,0x00,0x00,0x01,0x05,0x1e,0x18,0x20,
    0x19,0x1b,0x1e,0x1f,0x1b,0x1c,0x13,0x16,0x16,0x16,0x0f,0x01,0x00,0x00,
    0x00,0x01,0x05,0x05,0x15,0x15,0x23,0x1e,0x19,0x1e,0x1c,0x1c,0x1c,0x0f,
    0x0f,0x16,0x1d,0x01,0x00,0x00,0x00,0x01,0x15,0x15,0x16,0x16,0x18,0x18,
    0x1b,0x1c,0x20,0x17,0x17,0x19,0x1e,0x10,0x0a,0x12,0x00,0x00,0x00,0x01,
    0x21,0x15,0x15,0x0e,0x18,0x0e,0x0f,0x1a,0x19,0x0e,0x1c,0x1c,0x0e,0x13,
    0x09,0x08,0x00,0x00,0x00,0x01,0x15,0x16,0x21,0x0f,0x16,0x16,0x16,0x18,
    0x1d,0x0e,0x0f,0x22,0x1d,0x0e,0x24,0x08,0x00,0x00,0x00,0x01,0x15,0x15,
    0x15,0x16,0x16,0x0f,0x0e,0x13,0x0e,0x0e,0x1d,0x0e,0x0e,0x1d,0x22,0x12,
    0x25,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
    0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00
};

static const QRgb dspWoScheduleByWarehouse_ctable[] = {
    0xc6c6c6,0xff000000,0xff7f5f00,0xff7f3f00,0xff7f7f55,0xffffffff,0xff2a1f00,0xff553f00,0xffaa5f00,0xff7f5f55,0xffd49f55,0xffaa7f00,0xffd47f55,0xff551f00,
    0xffccccff,0xffc0dcc0,0xffaa7f55,0xffd49f00,0xff2a0000,0xffaabfaa,0xffd4bf55,0xfffffbf0,0xffd4dfff,0xff553f55,0xff555f55,0xffa0a0a4,0xff2a3f55,0xff7f7faa,
    0xff808080,0xffd4bfaa,0xffaa9faa,0xff7f9faa,0xff555faa,0xffffdfff,0xffa6caf0,0xffaa9fff,0xffaa7faa,0xffffbf55
};

static const unsigned char newWorkOrder_data[] = {
    0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x11,0x11,0x11,
    0x11,0x11,0x11,0x11,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
    0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x01,0x11,0x01,0x00,
    0x00,0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,
    0x11,0x11,0x01,0x11,0x11,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x11,0x0c,
    0x03,0x0c,0x03,0x0c,0x03,0x0c,0x03,0x0c,0x01,0x11,0x11,0x11,0x01,0x00,
    0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x0a,0x11,0x11,
    0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01,0x11,0x11,0x0e,0x0b,
    0x0b,0x11,0x11,0x05,0x03,0x0e,0x0e,0x0a,0x0e,0x0e,0x0e,0x01,0x00,0x00,
    0x00,0x01,0x11,0x0c,0x0b,0x03,0x05,0x0f,0x0a,0x0d,0x07,0x0a,0x05,0x08,
    0x04,0x04,0x0b,0x01,0x00,0x00,0x00,0x01,0x11,0x0e,0x11,0x11,0x02,0x06,
    0x06,0x0f,0x06,0x05,0x0d,0x0b,0x0b,0x0b,0x0b,0x01,0x00,0x00,0x00,0x01,
    0x11,0x03,0x0a,0x09,0x09,0x09,0x09,0x08,0x07,0x02,0x06,0x0f,0x0f,0x0f,
    0x03,0x01,0x00,0x00,0x00,0x01,0x0e,0x0c,0x02,0x62,0x0f,0x08,0x09,0x09,
    0x07,0x02,0x02,0x0d,0x05,0x0f,0x0b,0x01,0x00,0x00,0x00,0x01,0x11,0x11,
    0x11,0x0a,0x08,0x62,0x02,0x0b,0x0b,0x0f,0x02,0x06,0x03,0x01,0x0c,0x01,
    0x00,0x00,0x00,0x01,0x11,0x11,0x0b,0x07,0x09,0x02,0x02,0x0b,0x0c,0x02,
    0x01,0x05,0x0f,0x03,0x04,0x01,0x01,0x00,0x00,0x01,0x11,0x09,0x06,0x62,
    0x08,0x07,0x09,0x08,0x07,0x02,0x02,0x01,0x0d,0x01,0x0a,0x01,0x00,0x00,
    0x00,0x01,0x11,0x11,0x0e,0x0b,0x09,0x09,0x0f,0x09,0x02,0x61,0x06,0x0c,
    0x01,0x10,0x01,0x01,0x00,0x00,0x00,0x01,0x0e,0x0e,0x0e,0x0b,0x02,0x06,
    0x07,0x02,0x02,0x01,0x0d,0x01,0x01,0x10,0x10,0x01,0x00,0x01,0x00,0x01,
    0x0e,0x0b,0x0e,0x0c,0x06,0x0c,0x03,0x0d,0x0f,0x0c,0x02,0x02,0x01,0x01,
    0x01,0x01,0x00,0x00,0x00,0x01,0x0e,0x0e,0x0b,0x03,0x0b,0x0b,0x0b,0x06,
    0x0a,0x0c,0x03,0x01,0x0c,0x01,0x0c,0x01,0x00,0x00,0x00,0x01,0x0e,0x0b,
    0x0e,0x0b,0x0b,0x03,0x0c,0x0a,0x0c,0x0c,0x01,0x03,0x0c,0x03,0x04,0x01,
    0x01,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
    0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00
};

static const QRgb newWorkOrder_ctable[] = {
    0xc6c6c6,0xff000000,0xff808080,0xffc0dcc0,0xffa6caf0,0xff553f55,0xff555f55,0xff7f7faa,0xff7f9faa,0xffaa9faa,0xffaabfaa,0xffd4dfff,0xffccccff,0xff2a3f55,
    0xfffffbf0,0xffa0a0a4,0xffffff00,0xffffffff,0xff800000,0xff008000,0xff808000,0xff000080,0xff800080,0xff008080,0xff2a3faa,0xff2a3fff,0xff2a5f00,0xff2a5f55,
    0xff2a5faa,0xff2a5fff,0xff2a7f00,0xff2a7f55,0xff2a7faa,0xff2a7fff,0xff2a9f00,0xff2a9f55,0xff2a9faa,0xff2a9fff,0xff2abf00,0xff2abf55,0xff2abfaa,0xff2abfff,
    0xff2adf00,0xff2adf55,0xff2adfaa,0xff2adfff,0xff2aff00,0xff2aff55,0xff2affaa,0xff2affff,0xff550000,0xff550055,0xff5500aa,0xff5500ff,0xff551f00,0xff551f55,
    0xff551faa,0xff551fff,0xff553f00,0xff553faa,0xff553fff,0xff555f00,0xff555faa,0xff555fff,0xff557f00,0xff557f55,0xff557faa,0xff557fff,0xff559f00,0xff559f55,
    0xff559faa,0xff559fff,0xff55bf00,0xff55bf55,0xff55bfaa,0xff55bfff,0xff55df00,0xff55df55,0xff55dfaa,0xff55dfff,0xff55ff00,0xff55ff55,0xff55ffaa,0xff55ffff,
    0xff7f0000,0xff7f0055,0xff7f00aa,0xff7f00ff,0xff7f1f00,0xff7f1f55,0xff7f1faa,0xff7f1fff,0xff7f3f00,0xff7f3f55,0xff7f3faa,0xff7f3fff,0xff7f5f00,0xff7f5f55,
    0xff7f5faa,0xff7f5fff,0xff7f7f00,0xff7f7f55,0xff7f7fff,0xff7f9f00,0xff7f9f55,0xff7f9fff,0xff7fbf00,0xff7fbf55,0xff7fbfaa,0xff7fbfff,0xff7fdf00,0xff7fdf55,
    0xff7fdfaa,0xff7fdfff,0xff7fff00,0xff7fff55,0xff7fffaa,0xff7fffff,0xffaa0000,0xffaa0055,0xffaa00aa,0xffaa00ff,0xffaa1f00,0xffaa1f55,0xffaa1faa,0xffaa1fff,
    0xffaa3f00,0xffaa3f55,0xffaa3faa,0xffaa3fff,0xffaa5f00,0xffaa5f55,0xffaa5faa,0xffaa5fff,0xffaa7f00,0xffaa7f55,0xffaa7faa,0xffaa7fff,0xffaa9f00,0xffaa9f55,
    0xffaa9fff,0xffaabf00,0xffaabf55,0xffaabfff,0xffaadf00,0xffaadf55,0xffaadfaa,0xffaadfff,0xffaaff00,0xffaaff55,0xffaaffaa,0xffaaffff,0xffd40000,0xffd40055,
    0xffd400aa,0xffd400ff,0xffd41f00,0xffd41f55,0xffd41faa,0xffd41fff,0xffd43f00,0xffd43f55,0xffffffff
};

static struct EmbedImage {
    int width, height, depth;
    const unsigned char *data;
    int numColors;
    const QRgb *colorTable;
    bool alpha;
    const char *name;
} embed_image_vec[] = {
    { 20, 20, 8, (const unsigned char*)dspWoScheduleByItem_data, 17, dspWoScheduleByItem_ctable, TRUE, "dspWoScheduleByItem" },
    { 20, 20, 8, (const unsigned char*)dspWoScheduleByWarehouse_data, 38, dspWoScheduleByWarehouse_ctable, TRUE, "dspWoScheduleByWarehouse" },
    { 20, 20, 8, (const unsigned char*)newWorkOrder_data, 163, newWorkOrder_ctable, TRUE, "newWorkOrder" },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
};

static const QImage& qembed_findImage( const QString& name )
{
    static QDict<QImage> dict;
    QImage* img = dict.find( name );
    if ( !img ) {
	for ( int i = 0; embed_image_vec[i].data; i++ ) {
	    if ( strcmp(embed_image_vec[i].name, name.latin1()) == 0 ) {
		img = new QImage((uchar*)embed_image_vec[i].data,
			    embed_image_vec[i].width,
			    embed_image_vec[i].height,
			    embed_image_vec[i].depth,
			    (QRgb*)embed_image_vec[i].colorTable,
			    embed_image_vec[i].numColors,
			    QImage::BigEndian );
		if ( embed_image_vec[i].alpha )
		    img->setAlphaBuffer( TRUE );
		dict.insert( name, img );
		break;
	    }
	}
	if ( !img ) {
	    static QImage dummy;
	    return dummy;
	}
    }
    return *img;
}

#endif
