-- dspCheckRegister::sFillList() detail query
-- shows all the checks for a given date range, bank account, 
-- check number(optional), and recipient(optional)
-- and additionally fills in the check item detail if showDetail exists
SELECT checkhead_id AS checkid,
       CASE WHEN(checkhead_void) THEN -1
            WHEN(checkhead_posted) THEN 1
            ELSE 0
       END AS extra,
       -1 AS checkitem_id,
       formatBoolYN(checkhead_void) AS f_void,
       formatBoolYN(checkhead_misc) AS f_misc,
       formatBoolYN(checkhead_printed) AS f_printed,
       formatBoolYN(checkhead_posted) AS f_posted,
       CASE when checkhead_number = -1 THEN
         'Unspecified'
       ELSE TEXT(checkhead_number) END AS number,
       COALESCE(checkrecip_number || '-' || checkrecip_name,
		checkhead_recip_type || '-' || checkhead_recip_id ) AS description,
       checkhead_checkdate AS checkdate,
       checkhead_amount AS amount, 
       currtobase(checkhead_curr_id,checkhead_amount,checkhead_checkdate) AS base_amount, 
       currConcat(checkhead_curr_id) AS currAbbr,
       checkhead_number,
       1 AS orderby,
       'curr' AS amount_xtnumericrole,
       'curr' AS base_amount_xtnumericrole,
       0 AS xtindentrole
  FROM checkhead LEFT OUTER JOIN
       checkrecip ON ((checkhead_recip_id=checkrecip_id)
		 AND  (checkhead_recip_type=checkrecip_type))
 WHERE ((checkhead_checkdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
   <? if exists("check_number") ?>
      AND   (CAST(checkhead_number AS text) ~ <? value("check_number") ?>)
   <? endif ?>
   <? if exists("recip") ?>
      <? if exists("recip_type_v") ?>
         AND   (checkhead_recip_type = 'V' )
      <? endif ?>
      <? if exists("recip_type_c") ?>
         AND   (checkhead_recip_type = 'C' )
      <? endif ?>
      <? if exists("recip_type_t") ?>
         AND   (checkhead_recip_type = 'T' )
      <? endif ?>
      <? if exists("recip_id") ?>
         AND   (checkhead_recip_id = <? value("recip_id") ?> )
      <? endif ?>
   <? endif ?>
)
<? if exists("showDetail") ?>
UNION
SELECT checkitem_checkhead_id AS checkid, 0 AS extra, checkitem_id,
       '' AS f_void, '' AS f_misc, '' AS f_printed, '' AS f_posted,
       checkitem_vouchernumber AS number,
       checkitem_invcnumber AS description,
       CAST(NULL AS DATE) AS checkdate,
       checkitem_amount AS amount,
       currtobase(checkhead_curr_id,checkitem_amount,checkhead_checkdate) AS base_amount, 
       currConcat(checkitem_curr_id) AS currAbbr, 
       checkhead_number, 
       2 AS orderby,
       'curr' AS amount_xtnumericrole,
       'curr' AS base_amount_xtnumericrole,
       1 AS xtindentrole
  FROM checkitem, checkhead 
 WHERE ((checkitem_checkhead_id=checkhead_id)
   AND   (checkhead_checkdate BETWEEN <? value("startDate") ?> AND <? value("endDate") ?>)
   AND   (checkhead_bankaccnt_id=<? value("bankaccnt_id") ?>)
   <? if exists("check_number") ?>
      AND   (CAST(checkhead_number AS text) ~ <? value("check_number") ?>)
   <? endif ?>
   <? if exists("recip") ?>
      <? if exists("recip_type_v") ?>
         AND   (checkhead_recip_type = 'V' )
      <? endif ?>
      <? if exists("recip_type_c") ?>
         AND   (checkhead_recip_type = 'C' )
      <? endif ?>
      <? if exists("recip_type_t") ?>
         AND   (checkhead_recip_type = 'T' )
      <? endif ?>
      <? if exists("recip_id") ?>
         AND   (checkhead_recip_id = <? value("recip_id") ?> )
      <? endif ?>
   <? endif ?>
   )
<? endif ?>
 ORDER BY checkhead_number, checkid, orderby;
