#!/bin/bash
PROG=`basename $0`

if ! [ -d $QTDIR ]; then
  echo "Cannot find QTDIR"
  exit 1
fi
if ! [ -d $PGDIR/lib ]; then
  echo "Cannot find PGDIR/lib"
  exit 1
fi

if [ $# -lt 1 ] ; then
  APPROOT=../bin/xtuple.app
elif [ $# -eq 1 ] ; then
  APPROOT=$1
else
  echo "$PROG: ../bin/xtuple.app does not exist so either rebuild or specify a .app directory"
  exit 1
fi

cd $APPROOT                                                     || exit 1
APPROOT=`pwd`

collectAndRenameLibs() {
  if [ $# -ne 1 ] ; then
    echo "$PROG collectAndRenameLibs() expected 1 args and got $#: $*"
    return 1
  fi
  if expr "$1" : '\/' ; then
    FILE="$1"
  else
    FILE="`pwd`/$1"
  fi

  STARTDIR=`pwd`
  NEWLOC="@executable_path/../Frameworks"

  FRAMEWORKSDIR=$APPROOT/Contents/Frameworks
  [ -d $FRAMEWORKSDIR ] || mkdir $FRAMEWORKSDIR                     || return 1
  cd $FRAMEWORKSDIR                                                 || return 1

  LIBSTORENAME=`otool -L $FILE | egrep "($QTDIR|$PGDIR)" |  awk '{print $1}'`
  for TORENAME in $LIBSTORENAME ; do
    BASETORENAME=`basename $TORENAME`
    [ -e "$BASETORENAME" ] || cp "$TORENAME" .                      || return 1
    install_name_tool -id $NEWLOC/$BASETORENAME $BASETORENAME       || return 1
    install_name_tool -change $TORENAME $NEWLOC/$BASETORENAME $FILE || return 1
  done

  cd $STARTDIR                                                      || return 1
  return 0
}

collectAndRenameLibs $APPROOT/Contents/MacOS/xtuple             || exit 2

for PLUGIN in sqldrivers/libqsqlpsql.dylib sqldrivers/libqsqlodbc.dylib \
              imageformats/libqgif.dylib imageformats/libqjpeg.dylib    \
              imageformats/libqmng.dylib                                \
              designer/libxtuplewidgets.dylib ; do
  [ -d $APPROOT/Contents/plugins/`dirname $PLUGIN` ] || \
    mkdir -p $APPROOT/Contents/plugins/`dirname $PLUGIN`        || exit 2
  cp $QTDIR/plugins/$PLUGIN $APPROOT/Contents/plugins/$PLUGIN   || exit 2
  collectAndRenameLibs $APPROOT/Contents/plugins/$PLUGIN        || exit 2
done

while [ `otool -L $APPROOT/Contents/Frameworks/* | egrep "($QTDIR|$PGDIR)" | wc -l` -gt 0 ] ; do
  for LIB in $APPROOT/Contents/Frameworks/* ; do
    collectAndRenameLibs $LIB                                   || exit 2
  done
done

cd $APPROOT/Contents/Resources                                  || exit 3

echo "[Paths]" > qt.conf
echo "Prefix = .." >> qt.conf

if ! cp -r $QTDIR/bin/assistant.app .           ; then exit 3 ; fi
if ! cd assistant.app/Contents/MacOS            ; then exit 3 ; fi
for RENAME in Xml Gui Network Core ; do
  install_name_tool -change $QTDIR/lib/libQt${RENAME}.4.dylib @executable_path/../Frameworks/libQt${RENAME}.4.dylib assistant
done

if ! cd ../Resources                            ; then exit 3 ; fi
# create/copy a qt.conf file pointing to the plugins directory
echo "[Paths]" > qt.conf
echo "Prefix = .." >> qt.conf

if ! cd ..                                      ; then exit 4 ; fi
if [ -L Frameworks ] && ! rm Frameworks         ; then exit 4 ; fi
if ! ln -s ../../../Frameworks                  ; then exit 4 ; fi
if [ -L plugins ] && ! rm plugins               ; then exit 4 ; fi
if ! ln -s ../../../plugins                     ; then exit 4 ; fi

exit 0
